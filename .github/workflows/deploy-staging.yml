name: Deploy to Staging

on:
  push:
    branches:
      - main
      - athai/github-deploy
  workflow_dispatch: # Allow manual deployment

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      NODE_VERSION: "20.6.0"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: |
            server/package-lock.json
            client/package-lock.json

      - name: Install server dependencies
        run: |
          cd server
          npm ci

      - name: Install client dependencies
        run: |
          cd client
          npm ci

      - name: Validate build (optional)
        run: |
          cd client
          npm run build:staging
          echo "‚úÖ Client build validation completed"

      - name: Deploy to Lightsail instance
        run: |
          # Install SSH key
          mkdir -p ~/.ssh
          echo "${{ secrets.LIGHTSAIL_SSH_KEY }}" > ~/.ssh/lightsail_key
          chmod 600 ~/.ssh/lightsail_key

          # Deploy using git pull and rebuild
          ssh -i ~/.ssh/lightsail_key -o StrictHostKeyChecking=no \
            bitnami@${{ vars.LIGHTSAIL_HOST }} << 'ENDSSH'
            
            set -e  # Exit on any error
            
            echo "üöÄ Starting deployment..."
            
            # Navigate to the repository
            cd ~/bolt-gameserver-sample
            
            # Fetch latest changes
            echo "üîÑ Fetching latest code..."
            git fetch origin
            git reset --hard origin/${{ github.ref_name }}
            
            # Install server dependencies
            echo "üì¶ Installing server dependencies..."
            cd server
            npm ci
            
            # Build client
            echo "üèóÔ∏è  Building client..."
            cd ../client
            npm ci
            npm run build:staging
            
            # Start the service
            echo "‚ñ∂Ô∏è  Starting nodejs service..."
            sudo systemctl start nodejs.service
            
            echo "‚úÖ Service start command executed"
            
            # Clean up old backups (keep last 5)

            echo "üéâ Deployment completed successfully!"
          ENDSSH

      - name: Health check
        run: |
          echo "Performing health checks..."

          # Wait for service to be ready
          sleep 15

          # Check multiple endpoints
          HEALTH_ENDPOINTS=(
            "http://${{ vars.LIGHTSAIL_HOST }}/api/health"
            "https://${{ vars.LIGHTSAIL_HOST }}/api/health"
          )

          SUCCESS=false
          for endpoint in "${HEALTH_ENDPOINTS[@]}"; do
            echo "Checking $endpoint..."
            if curl -f -s --max-time 10 "$endpoint" > /dev/null; then
              echo "‚úÖ Health check passed for $endpoint"
              SUCCESS=true
              break
            else
              echo "‚ùå Health check failed for $endpoint"
            fi
          done

          if [ "$SUCCESS" = false ]; then
            echo "‚ùå All health checks failed"
            exit 1
          fi

      - name: Notify deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "‚úÖ Staging deployment successful!"
          else
            echo "‚ùå Staging deployment failed!"
          fi
